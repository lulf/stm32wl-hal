(function() {var implementors = {};
implementors["stm32wl_hal"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/adc/enum.Ts.html\" title=\"enum stm32wl_hal::adc::Ts\">Ts</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/adc/enum.Ts.html\" title=\"enum stm32wl_hal::adc::Ts\">Ts</a>&gt; for u32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/dac/enum.ModePin.html\" title=\"enum stm32wl_hal::dac::ModePin\">ModePin</a>&gt; for <a class=\"enum\" href=\"stm32wl_hal/pac/dac/mcr/enum.MODE1_A.html\" title=\"enum stm32wl_hal::pac::dac::mcr::MODE1_A\">MODE1_A</a>","synthetic":false,"types":["stm32wl::stm32wl5x_cm4::dac::mcr::MODE1_A"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/dac/enum.ModeChip.html\" title=\"enum stm32wl_hal::dac::ModeChip\">ModeChip</a>&gt; for <a class=\"enum\" href=\"stm32wl_hal/pac/dac/mcr/enum.MODE1_A.html\" title=\"enum stm32wl_hal::pac::dac::mcr::MODE1_A\">MODE1_A</a>","synthetic":false,"types":["stm32wl::stm32wl5x_cm4::dac::mcr::MODE1_A"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;u32&gt; for <a class=\"struct\" href=\"stm32wl_hal/dma/struct.Cr.html\" title=\"struct stm32wl_hal::dma::Cr\">Cr</a>","synthetic":false,"types":["stm32wl_hal::dma::cr::Cr"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/dma/struct.Cr.html\" title=\"struct stm32wl_hal::dma::Cr\">Cr</a>&gt; for u32","synthetic":false,"types":[]},{"text":"impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;P&gt; for <a class=\"struct\" href=\"stm32wl_hal/gpio/struct.Analog.html\" title=\"struct stm32wl_hal::gpio::Analog\">Analog</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: PinOps + AdcCh,&nbsp;</span>","synthetic":false,"types":["stm32wl_hal::gpio::Analog"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[u32; 3]&gt; for <a class=\"struct\" href=\"stm32wl_hal/info/struct.Uid.html\" title=\"struct stm32wl_hal::info::Uid\">Uid</a>","synthetic":false,"types":["stm32wl_hal::info::Uid"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/info/struct.Uid.html\" title=\"struct stm32wl_hal::info::Uid\">Uid</a>&gt; for [u32; 3]","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/info/struct.Uid.html\" title=\"struct stm32wl_hal::info::Uid\">Uid</a>&gt; for [u8; 12]","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/info/enum.Package.html\" title=\"enum stm32wl_hal::info::Package\">Package</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;u64&gt; for <a class=\"struct\" href=\"stm32wl_hal/info/struct.Uid64.html\" title=\"struct stm32wl_hal::info::Uid64\">Uid64</a>","synthetic":false,"types":["stm32wl_hal::info::Uid64"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/info/struct.Uid64.html\" title=\"struct stm32wl_hal::info::Uid64\">Uid64</a>&gt; for u64","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/lptim/enum.TrgSel.html\" title=\"enum stm32wl_hal::lptim::TrgSel\">TrgSel</a>&gt; for u32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/lptim/enum.TrgSel3.html\" title=\"enum stm32wl_hal::lptim::TrgSel3\">TrgSel3</a>&gt; for u32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;u32&gt; for <a class=\"struct\" href=\"stm32wl_hal/lptim/struct.Cfgr.html\" title=\"struct stm32wl_hal::lptim::Cfgr\">Cfgr</a>","synthetic":false,"types":["stm32wl_hal::lptim::cfgr::Cfgr"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/lptim/struct.Cfgr.html\" title=\"struct stm32wl_hal::lptim::Cfgr\">Cfgr</a>&gt; for u32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;u32&gt; for <a class=\"struct\" href=\"stm32wl_hal/lptim/struct.Cr.html\" title=\"struct stm32wl_hal::lptim::Cr\">Cr</a>","synthetic":false,"types":["stm32wl_hal::lptim::cr::Cr"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/lptim/struct.Cr.html\" title=\"struct stm32wl_hal::lptim::Cr\">Cr</a>&gt; for u32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;u8&gt; for <a class=\"enum\" href=\"stm32wl_hal/lptim/enum.Clk.html\" title=\"enum stm32wl_hal::lptim::Clk\">Clk</a>","synthetic":false,"types":["stm32wl_hal::lptim::Clk"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/pka/enum.Sign.html\" title=\"enum stm32wl_hal::pka::Sign\">Sign</a>&gt; for u32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/pwr/enum.LprunRange.html\" title=\"enum stm32wl_hal::pwr::LprunRange\">LprunRange</a>&gt; for <a class=\"enum\" href=\"stm32wl_hal/rcc/enum.MsiRange.html\" title=\"enum stm32wl_hal::rcc::MsiRange\">MsiRange</a>","synthetic":false,"types":["stm32wl_hal::rcc::MsiRange"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/rcc/enum.MsiRange.html\" title=\"enum stm32wl_hal::rcc::MsiRange\">MsiRange</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/rcc/enum.MsiRange.html\" title=\"enum stm32wl_hal::rcc::MsiRange\">MsiRange</a>&gt; for <a class=\"enum\" href=\"stm32wl_hal/pac/rcc/cr/enum.MSIRANGE_A.html\" title=\"enum stm32wl_hal::pac::rcc::cr::MSIRANGE_A\">MSIRANGE_A</a>","synthetic":false,"types":["stm32wl::stm32wl5x_cm4::rcc::cr::MSIRANGE_A"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/rng/enum.Error.html\" title=\"enum stm32wl_hal::rng::Error\">Error</a>&gt; for <a class=\"struct\" href=\"https://rust-random.github.io/rand/rand_core/error/struct.Error.html\" title=\"struct rand_core::error::Error\">Error</a>","synthetic":false,"types":["rand_core::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/subghz/struct.BitSync.html\" title=\"struct stm32wl_hal::subghz::BitSync\">BitSync</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/subghz/enum.FallbackMode.html\" title=\"enum stm32wl_hal::subghz::FallbackMode\">FallbackMode</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/subghz/struct.HseTrim.html\" title=\"struct stm32wl_hal::subghz::HseTrim\">HseTrim</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/subghz/enum.SpreadingFactor.html\" title=\"enum stm32wl_hal::subghz::SpreadingFactor\">SpreadingFactor</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[u8; 4]&gt; for <a class=\"struct\" href=\"stm32wl_hal/subghz/struct.FskPacketStatus.html\" title=\"struct stm32wl_hal::subghz::FskPacketStatus\">FskPacketStatus</a>","synthetic":false,"types":["stm32wl_hal::subghz::packet_status::FskPacketStatus"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[u8; 4]&gt; for <a class=\"struct\" href=\"stm32wl_hal/subghz/struct.LoRaPacketStatus.html\" title=\"struct stm32wl_hal::subghz::LoRaPacketStatus\">LoRaPacketStatus</a>","synthetic":false,"types":["stm32wl_hal::subghz::packet_status::LoRaPacketStatus"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/subghz/struct.PktCtrl.html\" title=\"struct stm32wl_hal::subghz::PktCtrl\">PktCtrl</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/subghz/struct.PwrCtrl.html\" title=\"struct stm32wl_hal::subghz::PwrCtrl\">PwrCtrl</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/subghz/enum.RxTimeoutStop.html\" title=\"enum stm32wl_hal::subghz::RxTimeoutStop\">RxTimeoutStop</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/subghz/struct.SleepCfg.html\" title=\"struct stm32wl_hal::subghz::SleepCfg\">SleepCfg</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/subghz/enum.StandbyClk.html\" title=\"enum stm32wl_hal::subghz::StandbyClk\">StandbyClk</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;u8&gt; for <a class=\"struct\" href=\"stm32wl_hal/subghz/struct.Status.html\" title=\"struct stm32wl_hal::subghz::Status\">Status</a>","synthetic":false,"types":["stm32wl_hal::subghz::status::Status"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/subghz/struct.Status.html\" title=\"struct stm32wl_hal::subghz::Status\">Status</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/subghz/struct.Timeout.html\" title=\"struct stm32wl_hal::subghz::Timeout\">Timeout</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>","synthetic":false,"types":["core::time::Duration"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/subghz/struct.Timeout.html\" title=\"struct stm32wl_hal::subghz::Timeout\">Timeout</a>&gt; for [u8; 3]","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/subghz/struct.Timeout.html\" title=\"struct stm32wl_hal::subghz::Timeout\">Timeout</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/embedded-time/0.12.0/embedded_time/duration/units/struct.Seconds.html\" title=\"struct embedded_time::duration::units::Seconds\">Seconds</a>","synthetic":false,"types":["embedded_time::duration::units::Seconds"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/subghz/struct.Timeout.html\" title=\"struct stm32wl_hal::subghz::Timeout\">Timeout</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/embedded-time/0.12.0/embedded_time/duration/units/struct.Milliseconds.html\" title=\"struct embedded_time::duration::units::Milliseconds\">Milliseconds</a>","synthetic":false,"types":["embedded_time::duration::units::Milliseconds"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/subghz/struct.Timeout.html\" title=\"struct stm32wl_hal::subghz::Timeout\">Timeout</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/embedded-time/0.12.0/embedded_time/duration/units/struct.Microseconds.html\" title=\"struct embedded_time::duration::units::Microseconds\">Microseconds</a>","synthetic":false,"types":["embedded_time::duration::units::Microseconds"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/subghz/enum.RampTime.html\" title=\"enum stm32wl_hal::subghz::RampTime\">RampTime</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/subghz/enum.RampTime.html\" title=\"enum stm32wl_hal::subghz::RampTime\">RampTime</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>","synthetic":false,"types":["core::time::Duration"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"stm32wl_hal/subghz/enum.RampTime.html\" title=\"enum stm32wl_hal::subghz::RampTime\">RampTime</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/embedded-time/0.12.0/embedded_time/duration/units/struct.Microseconds.html\" title=\"struct embedded_time::duration::units::Microseconds\">Microseconds</a>","synthetic":false,"types":["embedded_time::duration::units::Microseconds"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;u8&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;u8&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;u16&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;u16&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;u32&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;u32&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;u64&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;u64&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;u128&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;u128&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;i8&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;i8&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;i16&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;i16&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;i32&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;i32&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;i64&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;i64&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;i128&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"stm32wl_hal/struct.Ratio.html\" title=\"struct stm32wl_hal::Ratio\">Ratio</a>&lt;i128&gt;&gt; for f64","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()